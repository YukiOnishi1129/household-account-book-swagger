openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 1.0.0
servers:
  - url: http://localhost:8000
    description: ローカル開発用 API

paths:
  /login:
    post:
      tags:
        - users
      summary: No.2 login
      description: No.2 ログイン
      parameters: []
      requestBody: # リクエストボディ
        description: リクエストパラメータ
        content:
          application/json:
            schema: # POSTするオブジェクト
              $ref: '#/components/schemas/Login'
            example:
              email: test@test.com
              password: password
      responses:
        '200':
          description: Login成功
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
                example:
                  id: 1
                  name: やすお
                  email: test@test.com
                  user_type: 1
                  main_user_id: 0
  /partner-login:
    post:
      tags:
        - users
      summary: No.4 partner login
      description: No.4 パートナーログイン
      parameters: []
      requestBody: # リクエストボディ
        description: リクエストパラメータ
        content:
          application/json:
            schema: # POSTするオブジェクト
              $ref: '#/components/schemas/Login'
            example:
              email: test@test.com
              password: password
      responses:
        '200':
          description: PartnerLogin成功
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
                example:
                  id: 1
                  name: やすおのパートナー
                  email: partner@test.com
                  user_type: 2
                  main_user_id: 1
  /trial-login:
    post:
      tags:
        - users
      summary: No.30 trial login
      description: No.30 トライアルログイン
      parameters: []
      requestBody: # リクエストボディ
        description: リクエストパラメータ
        content:
          application/json:
            schema: # POSTするオブジェクト
              $ref: '#/components/schemas/Login'
            example:
              email: test@test.com
              password: password
      responses:
        '200':
          description: TrialLogin成功
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
                example:
                  id: 1
                  name: お試しマン
                  email: otameshi@test.com
                  user_type: 3
                  main_user_id: 0
  /auth:
    post:
      tags:
        - users
      summary: No.29 auth rooting
      description: No29 認証ルーティング
      parameters: []
      requestBody:
        description: リクエストパラメータ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              id: 1
      responses:
        '200':
          description: 認証成功
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
                example:
                  id: 1
                  name: やすお
                  email: test@test.com
                  user_type: 1
                  main_user_id: 0
  /register:
    post:
      tags:
        - users
      summary: No.3 register
      description: No3 会員登録
      parameters: []
      requestBody:
        description: リクエストパラメータ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              name: やすお
              email: test@test.com
              password: password
      responses:
        '201':
          description: 会員登録成功
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
                example:
                  id: 1
                  name: やすお
                  email: test@test.com
                  user_type: 1
                  main_user_id: 0
  /remaind-mail:
    post:
      tags:
        - users
      summary: No.5 password remaind email
      description: No5 パスワードリマインド アドレス送信
      parameters: []
      requestBody:
        description: リクエストパラメータ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              email: test@test.com
      responses:
        '204':
          description: パスワードリマインドメール送信成功
  /remaind-key:
    post:
      tags:
        - users
      summary: No.6 password remaind key
      description: No6 パスワードリマインド キー送信
      parameters: []
      requestBody:
        description: リクエストパラメータ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              email: test@test.com
      responses:
        '204':
          description: パスワードリマインド 変更成功
  /logout:
    get:
      tags:
        - users
      summary: No.7 logout
      description: No.7 ログアウト
      parameters: []
      responses:
        '204':
          description: ログアウト成功

  # paths オブジェクト
  /users:
    # path item オブジェクト
    get: # GET
      # Operationオブジェクト
      tags:
        - users
      summary: Get all users.
      description: Returns an array of User model
      parameters: []
      responses: # レスポンス定義
        '200': # HTTP status
          description: A JSON array of User model
          content:
            application/json: # レスポンスの形式指定
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User' # 参照するモデル
                example: # サンプルデータ
                  - id: 1
                    name: John Doe
                  - id: 2
                    name: Jane Doe
    post: # POST
      tags:
        - users
      summary: Create a new User
      description: Create a new User
      parameters: []
      requestBody: # リクエストボディ
        description: user to create
        content:
          application/json:
            schema: # POSTするオブジェクト
              $ref: '#/components/schemas/User'
            example:
              id: 3
              name: Richard Roe
      responses:
        '201':
          description: CREATED
  /users/{userId}:
    get:
      tags:
        - users
      summary: Get user
      description: user情報取得
      parameters: # リクエストパラメータ
        - name: userId
          in: path # パラメータをパス内に含める
          description: user id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: user情報取得成功
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
                example:
                  id: 1
                  name: test@test.com
                  user_type: 1
                  main_user_id: 0

components:
  schemas: # スキーマオブジェクトの定義
    Login:
      description: 'ログイン'
      type: object
      required:
        - email
        - password
      properties:
        email:
          title: 'メールアドレス'
          type: string
          example: 'sample@example.com'
        password:
          title: 'パスワード'
          type: string
          format: password
    User: # モデル名
      type: object # 型
      required: # 必須フィールド
        - id
      properties:
        id: # プロパティ名
          type: integer # 型
          format: int64 # フォーマット(int32, int64等)
        name:
          type: string
        email:
          type: string
        password:
          type: string
        user_type:
          type: integer
          format: int64
        main_user_id:
          type: integer
          format: int64
    Product:
      type: object
      required:
        - id
        - price
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Laptop
        price:
          type: integer
          example: 1200

tags:
  - name: users
    description: Access to Users
  - name: products
    description: Access to Products
