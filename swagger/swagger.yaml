openapi: 3.0.0
info:
  title: おおまか家計簿 API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 1.0.0
servers:
  - url: 'http://localhost:{port}'
    variables:
      port:
        default: '4010'
    description: モックAPI

paths:
  # No.0 csrf-cookie
  /sanctum/csrf-cookie:
    get:
      tags:
        - csrf-cookie
      description: csrf-cookie
      operationId: csrf-cookie
      security: []
      parameters: []
      responses:
        '200':
          description: cookie保護成功
  # No.1 ログイン
  /login:
    post:
      tags:
        - users
      summary: No.1 ログイン
      description: ログイン処理
      operationId: login
      security: []
      parameters: []
      requestBody:
        description: リクエストパラメータ
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestLogin'
      responses:
        '200':
          description: ログイン成功
          headers:
            Set-Cookie:
              schema:
                type: string
                example: development_session=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  # No.2 会員登録
  /register:
    post:
      tags:
        - users
      summary: No.2 会員登録
      description: 会員登録処理
      operationId: register
      security: []
      parameters: []
      requestBody:
        description: リクエストパラメータ
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRegister'
      responses:
        '201':
          description: 会員登録成功
          headers:
            Set-Cookie:
              schema:
                type: string
                example: development_session=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  # No.3 パートナーログイン
  /partner-login:
    post:
      tags:
        - users
      summary: No.3 パートナーログイン
      description: パートナーユーザーによるログイン処理
      operationId: partner-login
      security: []
      parameters: []
      requestBody:
        description: リクエストパラメータ
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestLogin'
      responses:
        '200':
          description: パートナーユーザーによるログイン成功
          headers:
            Set-Cookie:
              schema:
                type: string
                example: development_session=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                id: 1
                name: 'やすおのパートナー'
                email: 'partner@test.com'
                user_type: 2
                main_user_id: 1
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  # N0.4 お試しログイン
  /trial-login:
    post:
      tags:
        - users
      summary: No.4 お試しログイン
      description: お試しユーザーによるログイン処理
      operationId: try-login
      security: []
      parameters: []
      requestBody:
        description: リクエストパラメータ
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestLogin'
      responses:
        '200':
          description: お試しユーザーによるログイン成功
          headers:
            Set-Cookie:
              schema:
                type: string
                example: development_session=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                id: 1
                name: 'お試しマン'
                email: 'otameshi@test.com'
                user_type: 3
                main_user_id: 0
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  # No.5 認証ルーティング
  /auth:
    get:
      tags:
        - users
      summary: No.5 認証ルーティング
      description: 認証ルーティング
      operationId: auth-rooting
      parameters: []
      responses:
        '200':
          description: 認証成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  # No.6 ログアウト
  /logout:
    delete:
      tags:
        - users
      summary: No.6 ログアウト
      description: ログアウト処理
      operationId: logout
      parameters: []
      responses:
        '204':
          description: ログアウト成功
  # No.7 パスワードリマインド(アドレス送信)
  /remind-mail:
    post:
      tags:
        - users
      summary: No.7 パスワードリマインド(アドレス送信)
      description: パスワードリマインド アドレス送信
      operationId: remind-email
      security: []
      parameters: []
      requestBody:
        description: リクエストパラメータ
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRemindMail'
      responses:
        '204':
          description: パスワードリマインド アドレス送信成功
  # No.8 パスワードリマインド(キー送信)
  /remind-key:
    post:
      tags:
        - users
      summary: No.8 パスワードリマインド(キー送信)
      description: パスワードリマインド キー送信
      operationId: remind-key
      security: []
      parameters: []
      requestBody:
        description: リクエストパラメータ
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRemindKey'
      responses:
        '201':
          description: パスワードリマインド 変更成功
          headers:
            Set-Cookie:
              schema:
                type: string
                # example: development_session=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  # No.9 パスワード変更
  /change-password:
    post:
      tags:
        - users
      summary: No.9 パスワード変更
      description: パスワード変更処理
      operationId: change-password
      parameters: []
      requestBody:
        description: リクエストパラメータ
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestChangePassword'
      responses:
        '204':
          description: パスワード変更処理成功
  # No.10 カレンダー情報取得
  /calendar/{date}:
    get:
      tags:
        - calendar
      summary: No.10 カレンダー情報取得
      description: カレンダー情報取得
      operationId: get-calender
      parameters:
        - name: date
          in: path
          description: date
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: カレンダー情報取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
              example:
                date: '2020-05-01'
                sum_month_money: 20000
                sum_date_money:
                  - date: '2020-05-01'
                    money: 3200
                  - date: '2020-05-02'
                    money: 100
                  - date: '2020-05-03'
                    money: 3500
                  - date: '2020-05-04'
                    money: 4200
                  - date: '2020-05-05'
                    money: 300
        '401':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  # No.11 日別の金額情報取得
  /detail/{date}:
    get:
      tags:
        - detail
      summary: No.11 日別の金額情報取得
      description: 日別の金額情報取得
      operationId: get-details
      parameters:
        - name: date
          in: path
          description: date
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 日別の入力金額情報取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Detail'
                example:
                  - id: 1
                    money: 2000
                    img_file: 'xxx.jpg'
                    category_id: 1
                    category_name: '食費'
                  - id: 2
                    money: 30000
                    img_file: 'xxx.jpg'
                    category_id: 3
                    category_name: '経費'
                  - id: 3
                    money: 100000
                    img_file: 'xxx.jpg'
                    category_id: 1
                    category_name: '食費'
                  - id: 4
                    money: 150
                    img_file: 'xxx.jpg'
                    category_id: 2
                    category_name: '衣服'
                  - id: 5
                    money: 300
                    img_file: 'xxx.jpg'
                    category_id: 1
                    category_name: '食費'
  # No.12 金額情報新規登録
  /detail/create:
    post:
      tags:
        - detail
      summary: No.12 金額情報新規登録
      description: 金額入力
      operationId: add-detail
      parameters: []
      requestBody:
        description: リクエストパラメータ
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestDetail'
      responses:
        '201':
          description: 金額入力成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
              example:
                id: 6
                category_id: 6
                money: 4000
                img_file: 'hhh.png'
                category_name: '食費'
  # No.13 金額情報編集
  /detail/{money_id}:
    put:
      tags:
        - detail
      summary: No.13 金額情報編集
      description: 金額編集
      operationId: edit-detail
      parameters:
        - name: money_id
          in: path
          description: money_id
          required: true
          schema:
            type: integer
      requestBody:
        description: リクエストパラメータ
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestDetail'
      responses:
        '200':
          description: 金額編集成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
              example:
                id: 6
                category_id: 2
                money: 5000
                img_file: 'sss.png'
                category_name: '食費'
    # No.14 金額情報削除
    delete:
      tags:
        - detail
      summary: No.14 金額情報削除
      description: 金額削除
      operationId: delete-detail
      parameters:
        - name: money_id
          in: path
          description: money_id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 金額削除成功
  # No.15 カテゴリ情報取得
  /category:
    get:
      tags:
        - category
      summary: No.15 カテゴリ情報取得
      description: カテゴリ情報取得
      operationId: get-categories
      parameters: []
      responses:
        '200':
          description: カテゴリ情報取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
                example:
                  - id: 1
                    category_name: 食費
                    color_type: 1
                  - id: 2
                    category_name: 衣服
                    color_type: 2
                  - id: 3
                    category_name: 交通費
                    color_type: 3
                  - id: 4
                    category_name: 遊び
                    color_type: 4
                  - id: 5
                    category_name: 雑費
                    color_type: 5
  # No.16 カテゴリ新規登録
  /category/create:
    post:
      tags:
        - category
      summary: No.16 カテゴリ新規登録
      description: カテゴリ新規登録
      operationId: add-category
      parameters: []
      requestBody:
        description: リクエストパラメータ
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCategory'
      responses:
        '201':
          description: カテゴリ新規登録成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
              example:
                id: 6
                category_name: 勉強代
                color_type: 6
  # No.17 カテゴリ情報編集
  /category/{category_id}:
    put:
      tags:
        - category
      summary: No.17 カテゴリ情報編集
      description: カテゴリ情報編集
      operationId: edit-category
      parameters:
        - name: category_id
          in: path
          description: カテゴリID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: リクエストパラメータ
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCategory'
      responses:
        '200':
          description: カテゴリ情報更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
              example:
                id: 2
                category_name: 勉強代
                color_type: 6
    # No.18 カテゴリ情報削除
    delete:
      tags:
        - category
      summary: No.18 カテゴリ情報削除
      description: カテゴリ情報削除
      operationId: delete-category
      parameters:
        - name: category_id
          in: path
          description: カテゴリID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: カテゴリ情報削除成功
  # No.19 月のカテゴリ別支出金額取得
  /month-rate/{date}:
    get:
      tags:
        - month_rate
      summary: No.19 月のカテゴリ別支出金額取得
      description: 月のカテゴリ別支出金額取得
      operationId: get-month-rate
      parameters:
        - name: date
          in: path
          description: date
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 月の支出割合取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonthRate'
                example:
                  - category_id: 1
                    category_name: 食費
                    color_type: 1
                    money: 3000
                  - category_id: 2
                    category_name: 衣服
                    color_type: 2
                    money: 300
                  - category_id: 3
                    category_name: 交通費
                    color_type: 3
                    money: 4000
                  - category_id: 4
                    category_name: 遊び
                    color_type: 4
                    money: 500
                  - category_id: 5
                    category_name: 雑費
                    color_type: 5
                    money: 100
  # No.20 年間の支出推移取得
  /annual_change/{date}:
    get:
      tags:
        - annual_change
      summary: No.20 年間の支出推移取得
      description: 年間の支出推移
      operationId: get-annual-change
      parameters:
        - name: date
          in: path
          description: 現在日付
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 年間の支出推移取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnnualChange'
                example:
                  - month: '2019-06-01'
                    sum_money: 30000
                  - month: '2019-07-01'
                    sum_money: 20000
                  - month: '2019-08-01'
                    sum_money: 40000
                  - month: '2019-09-01'
                    sum_money: 132000
                  - month: '2019-10-01'
                    sum_money: 140000
                  - month: '2019-11-01'
                    sum_money: 100000
                  - month: '2019-12-01'
                    sum_money: 100000
                  - month: '2020-01-01'
                    sum_money: 50000
                  - month: '2020-02-01'
                    sum_money: 60000
                  - month: '2020-03-01'
                    sum_money: 90000
                  - month: '2020-04-01'
                    sum_money: 20000
                  - month: '2020-05-01'
                    sum_money: 30000
  # No21 パートナーユーザー取得
  /partner:
    get:
      tags:
        - partner
      summary: No.21 パートナーユーザー取得
      description: パートナーユーザー取得
      operationId: get-partners
      parameters: []
      responses:
        '200':
          description: パートナーユーザー取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Partner'
                example:
                  - id: 4
                    name: 'パートナー1'
                    email: 'partner@gmail.com'
                  - id: 5
                    name: 'パートナー2'
                    email: 'partner2@gmail.com'
                  - id: 6
                    name: 'パートナー3'
                    email: 'partner3@gmail.com'
  # No.22 パートナーユーザー登録
  /partner/create:
    post:
      tags:
        - partner
      summary: No.22 パートナーユーザー登録
      description: パートナーユーザー登録
      operationId: add-partner
      parameters: []
      requestBody:
        description: リクエストパラメータ
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPartner'
      responses:
        '201':
          description: パートナーユーザー登録成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
              example:
                id: 7
                name: 'パートナー4'
                email: 'partner4@gmail.com'
  # No.23 パートナーユーザー削除
  /partner/{user_id}:
    delete:
      tags:
        - partner
      summary: No.23 パートナーユーザー削除
      description: パートナーユーザー削除
      operationId: delete-partner
      parameters:
        - name: user_id
          in: path
          description: パートナーユーザーID
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: パートナーユーザー削除成功

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: development_session
  schemas: # スキーマオブジェクトの定義
    User:
      description: ユーザー情報
      type: object
      required:
        - id
        - name
        - email
        - user_type
        - main_user_id
      properties:
        id:
          title: 'ユーザーID'
          type: integer
          format: int64
          example: 1
        name:
          title: '氏名'
          type: string
          example: 'やすお'
        email:
          title: 'メールアドレス'
          type: string
          example: 'test@test.com'
        user_type:
          title: 'ユーザータイプ'
          type: integer
          format: int64
          example: 1
        main_user_id:
          title: 'メインユーザーID'
          type: integer
          format: int64
          example: 0
    RequestLogin:
      description: ログイン時のリクエストデータ
      type: object
      required:
        - email
        - password
      properties:
        email:
          title: 'メールアドレス'
          type: string
          example: 'sample@example.com'
        password:
          title: 'パスワード'
          type: string
          format: password
          example: 'password'
    RequestRegister:
      description: 会員登録時のリクエストデータ
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          title: 'パートナー'
          type: string
          example: 'やすお'
        email:
          title: 'メールアドレス'
          type: string
          example: 'sample@example.com'
        password:
          title: 'パスワード'
          type: string
          format: password
          example: 'password'
    RequestRemindMail:
      description: パスワードリマインド(アドレス送信)のリクエストデータ
      type: object
      required:
        - email
      properties:
        email:
          title: 'メールアドレス'
          type: string
          example: 'sample@example.com'
    RequestRemindKey:
      description: パスワードリマインド(キー送信)のリクエストデータ
      type: object
      required:
        - auth_key
      properties:
        auth_key:
          title: '認証キー'
          type: string
          example: 'hfjavoh'
    RequestChangePassword:
      description: パスワード変更のリクエストデータ
      type: object
      required:
        - password
      properties:
        password:
          title: 'パスワード'
          type: string
          example: 'password'
    Calendar:
      description: カレンダー情報
      type: object
      required:
        - date
        - sum_month_money
        - sum_date_money
      properties:
        date:
          type: string
          format: date
          example: '20200501'
        sum_month_money:
          type: integer
          format: int64
          example: 2000
        sum_date_money:
          type: array
          items:
            $ref: '#/components/schemas/SumDateMoney'
    SumDateMoney:
      description: 日別の支出金額の合計
      type: object
      required:
        - date
        - money
      properties:
        date:
          type: string
          format: date
          example: '2020-05-01'
        money:
          type: integer
          format: int64
          example: 200
    Detail:
      description: 日別の支出金額一覧
      type: object
      required:
        - id
        - money
        - img_file
        - category_id
        - category_name
      properties:
        id:
          type: integer
          format: int64
          example: 1
        money:
          type: integer
          format: int64
          example: 200
        img_file:
          type: string
          example: 'xxx.jpg'
        category_id:
          type: integer
          format: int64
          example: 1
        category_name:
          type: string
          example: '食費'
    RequestDetail:
      description: 金額情報のリクエストデータ
      type: object
      required:
        - category_id
        - money
        - img_file
        - date
      properties:
        category_id:
          type: integer
          format: int64
          example: 2
        money:
          type: integer
          format: int64
          example: 4000
        img_file:
          type: string
          example: 'xxx.jpg'
        date:
          type: string
          format: date
          example: 20200501
    Category:
      type: object
      required:
        - id
        - category_name
        - color_type
      properties:
        id:
          type: integer
          format: int64
          example: 1
        category_name:
          type: string
          example: '食費'
        color_type:
          type: integer
          format: int64
          example: 1
    RequestCategory:
      description: カテゴリ情報のリクエストデータ
      type: object
      required:
        - category_name
        - color_type
        - img_file
        - date
      properties:
        category_name:
          type: string
          example: '勉強代'
        color_type:
          type: integer
          format: int64
          example: 6
    MonthRate:
      type: object
      required:
        - category_id
        - category_name
        - color_type
        - money
      properties:
        category_id:
          type: integer
          format: int64
          example: 1
        category_name:
          type: string
          example: '食費'
        color_type:
          type: integer
          format: int64
          example: 1
        money:
          type: integer
          format: int64
          example: 200
    AnnualChange:
      type: object
      required:
        - month
        - sum_money
      properties:
        month:
          type: string
          format: date
          example: '20200501'
        sum_money:
          type: integer
          format: int64
          example: 100000
    Partner:
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: integer
          format: int64
          example: 4
        name:
          type: string
          example: 'パートナーさん'
        email:
          type: string
          example: 'partner@gmail.com'
    RequestPartner:
      description: パートナーユーザー情報のリクエストデータ
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: integer
          format: int64
          example: 4
        name:
          type: string
          example: 'パートナーさん'
        email:
          type: string
          example: 'partner@gmail.com'
    ModelError:
      title: ModelError
      type: object
      description: エラー
      properties:
        message:
          type: string
          description: エラーメッセージ
          example: エラーメッセージ
      required:
        - message
    ErrorResponse:
      title: ErrorResponse
      type: object
      description: エラーレスポンス
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ModelError'
      required:
        - errors
security:
  - cookieAuth: []
tags:
  - name: csrf-cookie
    description: csrf保護
  - name: users
    description: ユーザー情報
  - name: calendar
    description: 月別の金額データ
  - name: detail
    description: 日別の金額データ
  - name: category
    description: カテゴリ
  - name: month_rate
    description: 月の支出割合
  - name: annual_change
    description: 年間の支出推移
  - name: partner
    description: パートナー情報
