openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 1.0.0
servers:
  - url: http://localhost:8000
    description: ローカル開発用 API

paths:
  /login:
    post:
      tags:
        - users
      summary: No.2 login
      description: No.2 ログイン
      parameters: []
      requestBody: # リクエストボディ
        description: リクエストパラメータ
        content:
          application/json:
            schema: # POSTするオブジェクト
              $ref: '#/components/schemas/Login'
            example:
              email: test@test.com
              password: password
      responses:
        '200':
          description: Login成功
          headers:
            Set-Cookie:
              schema:
                type: string
                example: development_session=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
                example:
                  id: 1
                  name: やすお
                  email: test@test.com
                  user_type: 1
                  main_user_id: 0
  /partner-login:
    post:
      tags:
        - users
      summary: No.4 partner login
      description: No.4 パートナーログイン
      parameters: []
      requestBody: # リクエストボディ
        description: リクエストパラメータ
        content:
          application/json:
            schema: # POSTするオブジェクト
              $ref: '#/components/schemas/Login'
            example:
              email: test@test.com
              password: password
      responses:
        '200':
          description: PartnerLogin成功
          headers:
            Set-Cookie:
              schema:
                type: string
                example: development_session=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
                example:
                  id: 1
                  name: やすおのパートナー
                  email: partner@test.com
                  user_type: 2
                  main_user_id: 1
  /trial-login:
    post:
      tags:
        - users
      summary: No.30 trial login
      description: No.30 トライアルログイン
      parameters: []
      requestBody: # リクエストボディ
        description: リクエストパラメータ
        content:
          application/json:
            schema: # POSTするオブジェクト
              $ref: '#/components/schemas/Login'
            example:
              email: test@test.com
              password: password
      responses:
        '200':
          description: TrialLogin成功
          headers:
            Set-Cookie:
              schema:
                type: string
                example: development_session=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
                example:
                  id: 1
                  name: お試しマン
                  email: otameshi@test.com
                  user_type: 3
                  main_user_id: 0
  /auth:
    post:
      tags:
        - users
      summary: No.29 auth rooting
      description: No29 認証ルーティング
      security:
        - CookieAuth: []
      requestBody:
        description: リクエストパラメータ
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
              example:
                id: 1
      responses:
        '200':
          description: 認証成功
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
                example:
                  id: 1
                  name: やすお
                  email: test@test.com
                  user_type: 1
                  main_user_id: 0
  /register:
    post:
      tags:
        - users
      summary: No.3 register
      description: No3 会員登録
      parameters: []
      requestBody:
        description: リクエストパラメータ
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
            example:
              name: やすお
              email: test@test.com
              password: password
      responses:
        '201':
          description: 会員登録成功
          headers:
            Set-Cookie:
              schema:
                type: string
                example: development_session=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
                example:
                  id: 1
                  name: やすお
                  email: test@test.com
                  user_type: 1
                  main_user_id: 0
  /remaind-mail:
    post:
      tags:
        - users
      summary: No.5 password remaind email
      description: No5 パスワードリマインド アドレス送信
      parameters: []
      requestBody:
        description: リクエストパラメータ
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: integer
                  format: int64
            example:
              email: test@test.com
      responses:
        '204':
          description: パスワードリマインドメール送信成功
  /remaind-key:
    post:
      tags:
        - users
      summary: No.6 password remaind key
      description: No6 パスワードリマインド キー送信
      parameters: []
      requestBody:
        description: リクエストパラメータ
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                auth_key:
                  type: string
            example:
              id: 1
              auth_key: hfjavoh
      responses:
        '201':
          description: パスワードリマインド 変更成功
          headers:
            Set-Cookie:
              schema:
                type: string
                example: development_session=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
                example:
                  id: 1
                  name: やすお
                  email: test@test.com
                  user_type: 1
                  main_user_id: 0
  /logout:
    delete:
      tags:
        - users
      summary: No.7 logout
      description: No.7 ログアウト
      parameters: []
      responses:
        '204':
          description: ログアウト成功

  # paths オブジェクト
  /users:
    # path item オブジェクト
    get: # GET
      # Operationオブジェクト
      tags:
        - users
      summary: Get all users.
      description: Returns an array of User model
      parameters: []
      responses: # レスポンス定義
        '200': # HTTP status
          description: A JSON array of User model
          content:
            application/json: # レスポンスの形式指定
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User' # 参照するモデル
                example: # サンプルデータ
                  - id: 1
                    name: John Doe
                  - id: 2
                    name: Jane Doe
    post: # POST
      tags:
        - users
      summary: Create a new User
      description: Create a new User
      parameters: []
      requestBody: # リクエストボディ
        description: user to create
        content:
          application/json:
            schema: # POSTするオブジェクト
              $ref: '#/components/schemas/User'
            example:
              id: 3
              name: Richard Roe
      responses:
        '201':
          description: CREATED
  /users/{userId}:
    get:
      tags:
        - users
      summary: Get user
      description: user情報取得
      parameters: # リクエストパラメータ
        - name: userId
          in: path # パラメータをパス内に含める
          description: user id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: user情報取得成功
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
                example:
                  id: 1
                  name: test@test.com
                  user_type: 1
                  main_user_id: 0
    delete:
      tags:
        - users
      summary: Get user
      description: user情報取得
      parameters: # リクエストパラメータ
        - name: userId
          in: path # パラメータをパス内に含める
          description: user id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: user情報取得成功

  /calendar/{year_and_month}:
    get:
      tags:
        - calendar
      summary: No.8 get calendar
      description: No.8 カレンダー情報取得
      security:
        - CookieAuth: []
      parameters:
        - name: year_and_month
          in: path
          description: year_and_month
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: カレンダー情報取得成功
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Calendar'
                example:
                  money_date: 20200501
                  sum_month_money: 20000
                  sum_days_money:
                    - days: 20200501
                      money: 3200
                    - days: 20200502
                      money: 100
                    - days: 20200503
                      money: 3500
                    - days: 20200504
                      money: 4200
                    - days: 20200505
                      money: 300
  /detail/{date}:
    get:
      tags:
        - detail
      summary: No.11 get money
      description: No.11 日別の入力金額情報取得
      security:
        - CookieAuth: []
      parameters:
        - name: date
          in: path
          description: date
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 日別の入力金額情報取得成功
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Detail'
                example:
                  details:
                    - id: 1
                      money: 2000
                      img_file: xxx.jpg
                      category_id: 1
                      category_name: 食費
                    - id: 2
                      money: 30000
                      img_file: xxx.jpg
                      category_id: 3
                      category_name: 経費
                    - id: 3
                      money: 100000
                      img_file: xxx.jpg
                      category_id: 1
                      category_name: 食費
                    - id: 4
                      money: 150
                      img_file: xxx.jpg
                      category_id: 2
                      category_name: 衣服
                    - id: 5
                      money: 300
                      img_file: xxx.jpg
                      category_id: 1
                      category_name: 食費
  /detail/create:
    post:
      tags:
        - detail
      summary: No.12 input money
      description: No.12 金額入力
      security:
        - CookieAuth: []
      parameters: []
      requestBody:
        description: リクエストパラメータ
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                  format: int64
                money:
                  type: integer
                  format: int64
                img_file:
                  type: string
                date:
                  type: string
                  format: date
            example:
              category_id: 1
              money: 200
              img_file: xxx.jpg
              date: 20200501
      responses:
        '201':
          description: 金額入力成功
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Detail'
                example:
                  details:
                    - id: 1
                      money: 2000
                      img_file: xxx.jpg
                      category_id: 1
                      category_name: 食費
  /detail/{money_id}:
    put:
      tags:
        - detail
      summary: No.13 update money
      description: No.13 金額編集
      security:
        - CookieAuth: []
      parameters:
        - name: money_id
          in: path
          description: money_id
          required: true
          schema:
            type: integer
      requestBody:
        description: リクエストパラメータ
        content:
          application/json:
            schema:
              type: object
              properties:
                money:
                  type: integer
                  format: int64
                catgory_id:
                  type: integer
                  format: int64
                img_file:
                  type: string
                date:
                  type: string
                  format: date
      responses:
        '200':
          description: 金額編集成功
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Detail'
                example:
                  details:
                    - id: 1
                      money: 2000
                      category_id: 1
                      img_file: xxx.jpg
                      category_name: 食費
    delete:
      tags:
        - detail
      summary: No.14 delete money
      description: No.14 金額削除
      security:
        - CookieAuth: []
      parameters:
        - name: money_id
          in: path
          description: money_id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 金額削除成功

components:
  securitySchemes:
    CookieAuth:
      type: apiKey
      in: cookie
      name: development_session
  schemas: # スキーマオブジェクトの定義
    Login:
      description: 'ログイン'
      type: object
      required:
        - email
        - password
      properties:
        email:
          title: 'メールアドレス'
          type: string
          example: 'sample@example.com'
        password:
          title: 'パスワード'
          type: string
          format: password
    User: # モデル名
      type: object # 型
      required: # 必須フィールド
        - id
      properties:
        id: # プロパティ名
          type: integer # 型
          format: int64 # フォーマット(int32, int64等)
        name:
          type: string
        email:
          type: string
        password:
          type: string
        user_type:
          type: integer
          format: int64
        main_user_id:
          type: integer
          format: int64
    Calendar:
      type: object
      required:
        - money_date
        - sum_month_money
        - sum_days_money
      properties:
        money_date:
          type: string
          format: date
          example: 20200501
        sum_month_money:
          type: integer
          format: int64
          example: 2000
        sum_days_money:
          type: object
          required:
            - days
            - money
          properties:
            days:
              type: string
              format: date
              example: 20200501
            money:
              type: integer
              format: int64
              example: 200
    Detail:
      type: object
      required:
        - money_date
        - sum_month_money
        - sum_days_money
      properties:
        details:
          type: object
          required:
            - id
            - money
            - img_file
            - category_id
            - category_name
          properties:
            id:
              type: integer
              format: int64
              example: 1
            money:
              type: integer
              format: int64
              example: 200
            img_file:
              type: string
              example: xxx.jpg
            category_id:
              type: integer
              format: int64
              example: 1
            category_name:
              type: string
              example: 食費
    Product:
      type: object
      required:
        - id
        - price
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Laptop
        price:
          type: integer
          example: 1200

tags:
  - name: users
    description: ユーザー情報観点
  - name: calendar
    description: ダッシュボード関連のデータ
  - name: detail
    description: 日別の金額データ
